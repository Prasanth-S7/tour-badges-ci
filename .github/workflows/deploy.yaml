name: Deploy Worker

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to Cloudflare Workers
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: |
          pnpm install
          ls

      - name: Setup Wrangler Config
        run: |
          # Copy the example config if it exists, or use the main one
          if [ -f "wrangler.jsonc.example" ]; then
            cp wrangler.jsonc.example wrangler.jsonc
          fi
          
          # Replace the database ID placeholder with the actual secret
          sed -i 's/<unique-ID-for-your-database>/${{ secrets.PROD_DATABASE_ID }}/g' wrangler.jsonc

        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Apply D1 Migrations
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: d1 migrations apply db --remote --env production
          environment: production

      - name: Deploy
        uses: cloudflare/wrangler-action@v3
        with: 
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          environment: production
          secrets: |
            BADGR_USERNAME
            BADGR_PASSWORD
        env:
          BADGR_USERNAME: ${{ secrets.BADGR_USERNAME }}
          BADGR_PASSWORD: ${{ secrets.BADGR_PASSWORD }}
          command: deploy src/index.ts --env production